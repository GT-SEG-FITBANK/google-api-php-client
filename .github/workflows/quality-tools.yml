name: PHP Quality Tools

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  static-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, xml, ctype, json, tokenizer, dom, curl, pdo_mysql

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install PHP Quality Tools
        run: |
          composer global require phpstan/phpstan friendsofphp/php-cs-fixer squizlabs/php_codesniffer
          echo "$HOME/.composer/vendor/bin" >> $GITHUB_PATH

      # PHPStan
      - name: Run PHPStan
        run: |
          if [ ! -f phpstan.neon ]; then
            phpstan analyse src --level=max || true
          else
            phpstan analyse || true
          fi

      # Cria config do PHP-CS-Fixer, se não existir
      - name: Create .php-cs-fixer.php if not exists
        run: |
          if [ ! -f .php-cs-fixer.php ]; then
            cat << 'EOF' > .php-cs-fixer.php
<?php

$finder = PhpCsFixer\Finder::create()
    ->in(__DIR__ . '/src')
    ->name('*.php')
    ->exclude(['vendor', 'storage', 'bootstrap']);

return PhpCsFixer\Config::create()
    ->setRiskyAllowed(true)
    ->setRules([
        '@PSR12' => true,
        'array_syntax' => ['syntax' => 'short'],
        'binary_operator_spaces' => ['default' => 'align_single_space_minimal'],
        'blank_line_before_statement' => ['statements' => ['return']],
        'no_unused_imports' => true,
        'ordered_imports' => ['sort_algorithm' => 'alpha'],
        'single_quote' => true,
        'strict_comparison' => true,
        'strict_param' => true,
        'phpdoc_no_empty_return' => false,
    ])
    ->setFinder($finder);
EOF
          fi

      # PHP-CS-Fixer com relatório HTML
      - name: Run PHP-CS-Fixer and generate report
        run: |
          mkdir -p reports
          php-cs-fixer fix --dry-run --diff --format=html > reports/php-cs-fixer-report.html || true

      - name: Upload PHP-CS-Fixer HTML Report
        uses: actions/upload-artifact@v3
        with:
          name: php-cs-fixer-report
          path: reports/php-cs-fixer-report.html

      # PHP_CodeSniffer
      - name: Run PHP_CodeSniffer (PHPCS)
        run: |
          phpcs --standard=PSR12 src || true
